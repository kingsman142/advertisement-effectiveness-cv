%% Plot table of prediction results

%% load paths and data
%{
clear all;

cd('/Users/Phillip/Documents/Research/Image Memorability/'); % cd to base directory for memorability project

addpath('./MATLAB code/Analysis/');
addpath('./MATLAB code/Analysis/Prediction');
addpath('./MATLAB code/Analysis/CWM');
addpath('./MATLAB code/Analysis/Visualization');
addpath('./MATLAB code/Analysis/Humans vs algorithm');
addpath('./MATLAB code/Analysis/Prediction/libsvm-mat-3.0-1');

load('./MATLAB code/Analysis/Prediction/version_2010_aug_8/datamem'); % load annotations, stats, and precomputed descriptors (this file is generated by the script memory.m)
load('./Results/expt results/Matlab structured data/sorted_target_data.mat');
load('./MATLAB code/Analysis/Prediction/Pixel Histograms/pixel_histograms');

load('./MATLAB code/Analysis/Random splits/image_train_indices.mat');
load('./MATLAB code/Analysis/Random splits/image_test_indices.mat');

load('./MATLAB code/Analysis/Random splits/subject_hrs1');
load('./MATLAB code/Analysis/Random splits/subject_hrs2');


clearvars -except Areas Counts gist img pixel_histograms sorted_target_data ...
                  sptHistObjects sptHisthog sptHistsift image_train_indices ... 
                  image_test_indices subject_hrs1 subject_hrs2 which_date
%}

% all 'Random splits' below generated by GenerateRandomSplits3.m
load('./MATLAB code/Analysis/Random splits/subject_hrs1');              % train subjects
load('./MATLAB code/Analysis/Random splits/subject_hrs2');              % test subjects
              

%% setup rand seed
%RandStream.setDefaultStream(RandStream('mt19937ar','seed',sum(100*clock)));


%% options:
%{
Predictor_type = 'r'; % c = SVC, r = SVR, w = CWM
classification_type = 'm'; % m = about median, t = top set, b = bottom set
classification_set_size = 100; % used for top set and bottom set classification
resampling = ''; % 1 = Resample training set to uniform distribution, 2 = Resample test set to uniform distribution
kernel_combination_type = 'p'; % s = sum, p = product
independent_subject_set = 't'; % t = test on hit rates from an independent subject set, f = test on hit rates from the same subject set as training
num_trials = 25;


stat_feature_sets = {'p' 'g' 's' 'i' 'h' 'gsh' 'gshp' 'gship'};  % g = GIST, s = SIFT, h = HOG, p = Pixels
obj_feature_sets = {'p' 'c' 'a' 's' 't' 'e' 'se' 'set' 'n' 'm' 'b'};  % c = Counts, p = Presence, a = Areas, s = Spatial histograms
combo_stat_feature_sets = {};
stat_feature_sets_names = {'Pixels' 'GIST' 'SIFT' 'SSIM' 'HOG' 'GIST*SIFT*HOG', 'GIST*SIFT*HOG*Pixels' 'GIST*SIFT*SSIM*HOG*Pixels'};
obj_feature_sets_names = {'Obj presences' 'Obj counts' 'Obj areas' 'Obj spatial histograms' 'Attributes' 'Scenes' ' 'Marginalized obj counts' 'Marginalized obj areas' 'Marginalized obj spatial histograms'};
combo_feature_sets_names = {};
n_stat_feature_sets = length(stat_feature_sets);
n_obj_feature_sets = length(obj_feature_sets);
use_all_images_human_consistency = 'f';
%}

%%
clearvars feature_sets feature_sets_names;

all_predicteds = [];
all_test_labels = [];

FormatFeatureSetsForEvaluation;

names = [feature_sets_names {'Humans'} {'Actual'} {'Chance'}];

avg_rank_corr = [];

mean_set_top_10 = [];
mean_set_top_20 = [];
mean_set_top_100 = [];
mean_set_top_500 = [];
mean_set_101_500 = [];
mean_set_101_989 = [];
mean_set_bottom_500 = [];
mean_set_bottom_100 = [];
mean_set_bottom_20 = [];
mean_set_bottom_10 = [];

for k=1:(n_feature_sets+3)
    

    LoadPredictionData;
    
    
    %% quantify results

    N = size(all_predicteds,1);

    set_top_10 = zeros(N,1);
    set_top_20 = zeros(N,1);
    set_top_100 = zeros(N,1);
    set_top_500 = zeros(N,1);
    set_101_500 = zeros(N,1);
    set_101_989 = zeros(N,1);
    set_bottom_500 = zeros(N,1);
    set_bottom_100 = zeros(N,1);
    set_bottom_20 = zeros(N,1);
    set_bottom_10 = zeros(N,1);
    
    rank_corr = zeros(N,1);
    
    for i=1:N
        test_label = all_test_labels(i,:)';
        predicted = all_predicteds(i,:)';
        
        rank_corr(i) = corr(test_label, predicted, 'type', 'Spearman');
        
        [foo,jj] = sort(predicted,'descend');
        
        set_top_10(i) = 100*mean(test_label(jj(1:10)));
        set_top_20(i) = 100*mean(test_label(jj(1:20)));
        set_top_100(i) = 100*mean(test_label(jj(1:100)));
        set_top_500(i) = 100*mean(test_label(jj(1:500)));
        set_101_500(i) = 100*mean(test_label(jj(101:500)));
        set_101_989(i) = 100*mean(test_label(jj(101:989)));
        set_bottom_500(i) = 100*mean(test_label(jj(end-499:end)));
        set_bottom_100(i) = 100*mean(test_label(jj(end-99:end)));
        set_bottom_20(i) = 100*mean(test_label(jj(end-19:end)));
        set_bottom_10(i) = 100*mean(test_label(jj(end-9:end)));
    end
    
    avg_rank_corr(k) = mean(rank_corr);
    
    mean_set_top_10(k) = mean(set_top_10);
    mean_set_top_20(k) = mean(set_top_20);
    mean_set_top_100(k) = mean(set_top_100);
    mean_set_top_500(k) = mean(set_top_500);
    mean_set_101_500(k) = mean(set_101_500);
    mean_set_101_989(k) = mean(set_101_989);
    mean_set_bottom_500(k) = mean(set_bottom_500);
    mean_set_bottom_100(k) = mean(set_bottom_100);
    mean_set_bottom_20(k) = mean(set_bottom_20);
    mean_set_bottom_10(k) = mean(set_bottom_10);

end

results_table = cat(1, names, num2cell(mean_set_top_10), num2cell(mean_set_top_20), ...
                        num2cell(mean_set_top_100), num2cell(mean_set_top_500), ...
                        num2cell(mean_set_101_500), num2cell(mean_set_101_989), num2cell(mean_set_bottom_500), ...
                        num2cell(mean_set_bottom_100), num2cell(mean_set_bottom_20), ...
                        num2cell(mean_set_bottom_10), num2cell(avg_rank_corr));
                    
cell2csv(fullfile('./Analysis/results/',which_date,strcat('/results_table_',use_all_images_human_consistency,'.csv')), results_table);
                    